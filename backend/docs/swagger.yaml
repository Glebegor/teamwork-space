definitions:
  domain.ErrorResponse:
    properties:
      Message:
        type: string
    type: object
  domain.Login:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  domain.LoginResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  domain.Refresh:
    properties:
      refreshToken:
        type: string
    type: object
  domain.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  domain.Reg:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  domain.SuccessResponse:
    properties:
      Status:
        type: string
    type: object
info:
  contact: {}
  title: Team work space Service API
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Do authorization with using email and password
      operationId: authorization-user
      parameters:
      - description: Registration
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.LoginResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Login
      tags:
      - auth v1
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh token to get access and another refresh token
      operationId: reftesh-token
      parameters:
      - description: Registration
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.RefreshTokenResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Refresh
      tags:
      - auth v1
  /api/v1/auth/registration:
    post:
      consumes:
      - application/json
      description: Do Registration with using username, email and password
      operationId: create-user
      parameters:
      - description: Registration
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.Reg'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Registration
      tags:
      - auth v1
swagger: "2.0"
